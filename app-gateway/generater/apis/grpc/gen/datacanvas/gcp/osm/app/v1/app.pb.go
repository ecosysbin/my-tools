// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: datacanvas/gcp/osm/app/v1/app.proto

package appv1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "gitlab.datacanvas.com/AlayaNeW/OSM/gokit/genproto/gcpapis/http/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "k8s.io/api/apps/v1"
	_ "k8s.io/api/core/v1"
	_ "k8s.io/api/networking/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VersionInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VersionInformationRequest) Reset() {
	*x = VersionInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInformationRequest) ProtoMessage() {}

func (x *VersionInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInformationRequest.ProtoReflect.Descriptor instead.
func (*VersionInformationRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{0}
}

type VersionInformationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32                            `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string                           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   *VersionInformationResponse_Info `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VersionInformationResponse) Reset() {
	*x = VersionInformationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInformationResponse) ProtoMessage() {}

func (x *VersionInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInformationResponse.ProtoReflect.Descriptor instead.
func (*VersionInformationResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{1}
}

func (x *VersionInformationResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VersionInformationResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VersionInformationResponse) GetData() *VersionInformationResponse_Info {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckHealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckHealthRequest) Reset() {
	*x = CheckHealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHealthRequest) ProtoMessage() {}

func (x *CheckHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHealthRequest.ProtoReflect.Descriptor instead.
func (*CheckHealthRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{2}
}

type CheckHealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of the response.
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// A human readable message indicating details about the transition.
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CheckHealthResponse) Reset() {
	*x = CheckHealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHealthResponse) ProtoMessage() {}

func (x *CheckHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHealthResponse.ProtoReflect.Descriptor instead.
func (*CheckHealthResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{3}
}

func (x *CheckHealthResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CheckHealthResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ListAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 集群状态，已删除(1)或正常运行(0)"	default(0)	Enums(1, 0)
	Delete          int32    `protobuf:"varint,1,opt,name=delete,proto3" json:"delete,omitempty"`
	Context         string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	PageIndex       int32    `protobuf:"varint,3,opt,name=page_index,json=pageIndex,proto3" json:"page_index,omitempty"`
	PageNum         int32    `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	Name            string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Id              string   `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	InstanceId      string   `protobuf:"bytes,7,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ManageBy        string   `protobuf:"bytes,8,opt,name=manage_by,json=manageBy,proto3" json:"manage_by,omitempty"`
	CreateUser      string   `protobuf:"bytes,9,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	CreateStartTime string   `protobuf:"bytes,10,opt,name=create_start_time,json=createStartTime,proto3" json:"create_start_time,omitempty"`
	CreateEndTime   string   `protobuf:"bytes,11,opt,name=create_end_time,json=createEndTime,proto3" json:"create_end_time,omitempty"`
	DeleteStartTime string   `protobuf:"bytes,12,opt,name=delete_start_time,json=deleteStartTime,proto3" json:"delete_start_time,omitempty"`
	DeleteEndTime   string   `protobuf:"bytes,13,opt,name=delete_end_time,json=deleteEndTime,proto3" json:"delete_end_time,omitempty"`
	Status          []string `protobuf:"bytes,14,rep,name=status,proto3" json:"status,omitempty"`
	TenantIds       []string `protobuf:"bytes,15,rep,name=tenant_ids,json=tenantIds,proto3" json:"tenant_ids,omitempty"`
}

func (x *ListAppRequest) Reset() {
	*x = ListAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppRequest) ProtoMessage() {}

func (x *ListAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppRequest.ProtoReflect.Descriptor instead.
func (*ListAppRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{4}
}

func (x *ListAppRequest) GetDelete() int32 {
	if x != nil {
		return x.Delete
	}
	return 0
}

func (x *ListAppRequest) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *ListAppRequest) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *ListAppRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListAppRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListAppRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListAppRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ListAppRequest) GetManageBy() string {
	if x != nil {
		return x.ManageBy
	}
	return ""
}

func (x *ListAppRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *ListAppRequest) GetCreateStartTime() string {
	if x != nil {
		return x.CreateStartTime
	}
	return ""
}

func (x *ListAppRequest) GetCreateEndTime() string {
	if x != nil {
		return x.CreateEndTime
	}
	return ""
}

func (x *ListAppRequest) GetDeleteStartTime() string {
	if x != nil {
		return x.DeleteStartTime
	}
	return ""
}

func (x *ListAppRequest) GetDeleteEndTime() string {
	if x != nil {
		return x.DeleteEndTime
	}
	return ""
}

func (x *ListAppRequest) GetStatus() []string {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListAppRequest) GetTenantIds() []string {
	if x != nil {
		return x.TenantIds
	}
	return nil
}

type ListAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32                 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   *ListAppResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListAppResponse) Reset() {
	*x = ListAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppResponse) ProtoMessage() {}

func (x *ListAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppResponse.ProtoReflect.Descriptor instead.
func (*ListAppResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{5}
}

func (x *ListAppResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListAppResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListAppResponse) GetData() *ListAppResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context string `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *ListConfigRequest) Reset() {
	*x = ListConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigRequest) ProtoMessage() {}

func (x *ListConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigRequest.ProtoReflect.Descriptor instead.
func (*ListConfigRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{6}
}

func (x *ListConfigRequest) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

type ListConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32                        `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   []*ListConfigResponse_Config `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListConfigResponse) Reset() {
	*x = ListConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigResponse) ProtoMessage() {}

func (x *ListConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigResponse.ProtoReflect.Descriptor instead.
func (*ListConfigResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{7}
}

func (x *ListConfigResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListConfigResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListConfigResponse) GetData() []*ListConfigResponse_Config {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppType    string `protobuf:"bytes,1,opt,name=app_type,json=appType,proto3" json:"app_type,omitempty"`
	Domain     string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Version    string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Kubeconfig string `protobuf:"bytes,4,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"`
}

func (x *AddConfigRequest) Reset() {
	*x = AddConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConfigRequest) ProtoMessage() {}

func (x *AddConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConfigRequest.ProtoReflect.Descriptor instead.
func (*AddConfigRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{8}
}

func (x *AddConfigRequest) GetAppType() string {
	if x != nil {
		return x.AppType
	}
	return ""
}

func (x *AddConfigRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *AddConfigRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AddConfigRequest) GetKubeconfig() string {
	if x != nil {
		return x.Kubeconfig
	}
	return ""
}

type AddConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddConfigResponse) Reset() {
	*x = AddConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConfigResponse) ProtoMessage() {}

func (x *AddConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConfigResponse.ProtoReflect.Descriptor instead.
func (*AddConfigResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{9}
}

func (x *AddConfigResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddConfigResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddConfigResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type DeleteAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids             []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	IsDeleteStorage string   `protobuf:"bytes,2,opt,name=isDeleteStorage,proto3" json:"isDeleteStorage,omitempty"`
}

func (x *DeleteAppRequest) Reset() {
	*x = DeleteAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppRequest) ProtoMessage() {}

func (x *DeleteAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteAppRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteAppRequest) GetIsDeleteStorage() string {
	if x != nil {
		return x.IsDeleteStorage
	}
	return ""
}

type DeleteAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteAppResponse) Reset() {
	*x = DeleteAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppResponse) ProtoMessage() {}

func (x *DeleteAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppResponse.ProtoReflect.Descriptor instead.
func (*DeleteAppResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteAppResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeleteAppResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteAppResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type DeleteConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppType string `protobuf:"bytes,1,opt,name=app_type,json=appType,proto3" json:"app_type,omitempty"`
}

func (x *DeleteConfigRequest) Reset() {
	*x = DeleteConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigRequest) ProtoMessage() {}

func (x *DeleteConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigRequest.ProtoReflect.Descriptor instead.
func (*DeleteConfigRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteConfigRequest) GetAppType() string {
	if x != nil {
		return x.AppType
	}
	return ""
}

type DeleteConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteConfigResponse) Reset() {
	*x = DeleteConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigResponse) ProtoMessage() {}

func (x *DeleteConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigResponse.ProtoReflect.Descriptor instead.
func (*DeleteConfigResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteConfigResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeleteConfigResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteConfigResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetAppRequest) Reset() {
	*x = GetAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppRequest) ProtoMessage() {}

func (x *GetAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppRequest.ProtoReflect.Descriptor instead.
func (*GetAppRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{14}
}

func (x *GetAppRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type GetAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32               `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   *GetAppResponse_App `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAppResponse) Reset() {
	*x = GetAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppResponse) ProtoMessage() {}

func (x *GetAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppResponse.ProtoReflect.Descriptor instead.
func (*GetAppResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{15}
}

func (x *GetAppResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetAppResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetAppResponse) GetData() *GetAppResponse_App {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orderlist []*Orderlist `protobuf:"bytes,1,rep,name=orderlist,proto3" json:"orderlist,omitempty"`
	AppName   string       `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	AppDesc   string       `protobuf:"bytes,3,opt,name=app_desc,json=appDesc,proto3" json:"app_desc,omitempty"`
	UserName  string       `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	TenantId  string       `protobuf:"bytes,5,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Name      string       `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Desc      string       `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	AidcId    uint64       `protobuf:"varint,8,opt,name=aidc_id,json=aidcId,proto3" json:"aidc_id,omitempty"`
}

func (x *CreateAppRequest) Reset() {
	*x = CreateAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppRequest) ProtoMessage() {}

func (x *CreateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppRequest.ProtoReflect.Descriptor instead.
func (*CreateAppRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{16}
}

func (x *CreateAppRequest) GetOrderlist() []*Orderlist {
	if x != nil {
		return x.Orderlist
	}
	return nil
}

func (x *CreateAppRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *CreateAppRequest) GetAppDesc() string {
	if x != nil {
		return x.AppDesc
	}
	return ""
}

func (x *CreateAppRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CreateAppRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CreateAppRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAppRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateAppRequest) GetAidcId() uint64 {
	if x != nil {
		return x.AidcId
	}
	return 0
}

type CreateAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateAppResponse) Reset() {
	*x = CreateAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppResponse) ProtoMessage() {}

func (x *CreateAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppResponse.ProtoReflect.Descriptor instead.
func (*CreateAppResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{17}
}

func (x *CreateAppResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateAppResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateAppResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type UpdateAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orderlist []*Orderlist `protobuf:"bytes,1,rep,name=orderlist,proto3" json:"orderlist,omitempty"`
	AppId     string       `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppName   string       `protobuf:"bytes,3,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	AppDesc   string       `protobuf:"bytes,4,opt,name=app_desc,json=appDesc,proto3" json:"app_desc,omitempty"`
	UserName  string       `protobuf:"bytes,5,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	TenantId  string       `protobuf:"bytes,6,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Name      string       `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Desc      string       `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`
	AidcId    uint64       `protobuf:"varint,9,opt,name=aidc_id,json=aidcId,proto3" json:"aidc_id,omitempty"`
}

func (x *UpdateAppRequest) Reset() {
	*x = UpdateAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppRequest) ProtoMessage() {}

func (x *UpdateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateAppRequest) GetOrderlist() []*Orderlist {
	if x != nil {
		return x.Orderlist
	}
	return nil
}

func (x *UpdateAppRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UpdateAppRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *UpdateAppRequest) GetAppDesc() string {
	if x != nil {
		return x.AppDesc
	}
	return ""
}

func (x *UpdateAppRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateAppRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UpdateAppRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAppRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateAppRequest) GetAidcId() uint64 {
	if x != nil {
		return x.AidcId
	}
	return 0
}

type UpdateAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateAppResponse) Reset() {
	*x = UpdateAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppResponse) ProtoMessage() {}

func (x *UpdateAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateAppResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateAppResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateAppResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type UpdateInstanceStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId             string                              `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	InstanceId           string                              `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	AppInstanceId        string                              `protobuf:"bytes,3,opt,name=app_instance_id,json=appInstanceId,proto3" json:"app_instance_id,omitempty"`
	Valid                bool                                `protobuf:"varint,4,opt,name=valid,proto3" json:"valid,omitempty"`
	ProductCategoryValue string                              `protobuf:"bytes,5,opt,name=product_category_value,json=productCategoryValue,proto3" json:"product_category_value,omitempty"`
	Reason               *UpdateInstanceStatusRequest_Reason `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *UpdateInstanceStatusRequest) Reset() {
	*x = UpdateInstanceStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstanceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceStatusRequest) ProtoMessage() {}

func (x *UpdateInstanceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateInstanceStatusRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateInstanceStatusRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UpdateInstanceStatusRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *UpdateInstanceStatusRequest) GetAppInstanceId() string {
	if x != nil {
		return x.AppInstanceId
	}
	return ""
}

func (x *UpdateInstanceStatusRequest) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *UpdateInstanceStatusRequest) GetProductCategoryValue() string {
	if x != nil {
		return x.ProductCategoryValue
	}
	return ""
}

func (x *UpdateInstanceStatusRequest) GetReason() *UpdateInstanceStatusRequest_Reason {
	if x != nil {
		return x.Reason
	}
	return nil
}

type UpdateInstanceStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateInstanceStatusResponse) Reset() {
	*x = UpdateInstanceStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstanceStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceStatusResponse) ProtoMessage() {}

func (x *UpdateInstanceStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateInstanceStatusResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateInstanceStatusResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateInstanceStatusResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateInstanceStatusResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type PauseAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *PauseAppRequest) Reset() {
	*x = PauseAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseAppRequest) ProtoMessage() {}

func (x *PauseAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseAppRequest.ProtoReflect.Descriptor instead.
func (*PauseAppRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{22}
}

func (x *PauseAppRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type PauseAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PauseAppResponse) Reset() {
	*x = PauseAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseAppResponse) ProtoMessage() {}

func (x *PauseAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseAppResponse.ProtoReflect.Descriptor instead.
func (*PauseAppResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{23}
}

func (x *PauseAppResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PauseAppResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PauseAppResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ResumeAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ResumeAppRequest) Reset() {
	*x = ResumeAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeAppRequest) ProtoMessage() {}

func (x *ResumeAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeAppRequest.ProtoReflect.Descriptor instead.
func (*ResumeAppRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{24}
}

func (x *ResumeAppRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ResumeAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ResumeAppResponse) Reset() {
	*x = ResumeAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeAppResponse) ProtoMessage() {}

func (x *ResumeAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeAppResponse.ProtoReflect.Descriptor instead.
func (*ResumeAppResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{25}
}

func (x *ResumeAppResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ResumeAppResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ResumeAppResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type VersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VersionRequest) Reset() {
	*x = VersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRequest) ProtoMessage() {}

func (x *VersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRequest.ProtoReflect.Descriptor instead.
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{26}
}

type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32                 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   *VersionResponse_Info `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{27}
}

func (x *VersionResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VersionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VersionResponse) GetData() *VersionResponse_Info {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetLoglevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level string `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *SetLoglevelRequest) Reset() {
	*x = SetLoglevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLoglevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLoglevelRequest) ProtoMessage() {}

func (x *SetLoglevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLoglevelRequest.ProtoReflect.Descriptor instead.
func (*SetLoglevelRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{28}
}

func (x *SetLoglevelRequest) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type SetLoglevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SetLoglevelResponse) Reset() {
	*x = SetLoglevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLoglevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLoglevelResponse) ProtoMessage() {}

func (x *SetLoglevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLoglevelResponse.ProtoReflect.Descriptor instead.
func (*SetLoglevelResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{29}
}

func (x *SetLoglevelResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SetLoglevelResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SetLoglevelResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetVClusterTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 集群ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVClusterTokenRequest) Reset() {
	*x = GetVClusterTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVClusterTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVClusterTokenRequest) ProtoMessage() {}

func (x *GetVClusterTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVClusterTokenRequest.ProtoReflect.Descriptor instead.
func (*GetVClusterTokenRequest) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{30}
}

func (x *GetVClusterTokenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVClusterTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetVClusterTokenResponse) Reset() {
	*x = GetVClusterTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVClusterTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVClusterTokenResponse) ProtoMessage() {}

func (x *GetVClusterTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVClusterTokenResponse.ProtoReflect.Descriptor instead.
func (*GetVClusterTokenResponse) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{31}
}

func (x *GetVClusterTokenResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetVClusterTokenResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetVClusterTokenResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type VersionInformationResponse_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	GitCommit string `protobuf:"bytes,2,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`
	BuildAt   string `protobuf:"bytes,3,opt,name=build_at,json=buildAt,proto3" json:"build_at,omitempty"`
}

func (x *VersionInformationResponse_Info) Reset() {
	*x = VersionInformationResponse_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionInformationResponse_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInformationResponse_Info) ProtoMessage() {}

func (x *VersionInformationResponse_Info) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInformationResponse_Info.ProtoReflect.Descriptor instead.
func (*VersionInformationResponse_Info) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{1, 0}
}

func (x *VersionInformationResponse_Info) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VersionInformationResponse_Info) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *VersionInformationResponse_Info) GetBuildAt() string {
	if x != nil {
		return x.BuildAt
	}
	return ""
}

type ListAppResponse_Conditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    string   `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	PreStatus string   `protobuf:"bytes,2,opt,name=pre_status,json=preStatus,proto3" json:"pre_status,omitempty"`
	Status    string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Reason    string   `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Events    []string `protobuf:"bytes,5,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *ListAppResponse_Conditions) Reset() {
	*x = ListAppResponse_Conditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppResponse_Conditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppResponse_Conditions) ProtoMessage() {}

func (x *ListAppResponse_Conditions) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppResponse_Conditions.ProtoReflect.Descriptor instead.
func (*ListAppResponse_Conditions) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ListAppResponse_Conditions) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ListAppResponse_Conditions) GetPreStatus() string {
	if x != nil {
		return x.PreStatus
	}
	return ""
}

func (x *ListAppResponse_Conditions) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListAppResponse_Conditions) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ListAppResponse_Conditions) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

type ListAppResponse_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AppId           string                      `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	InstanceId      string                      `protobuf:"bytes,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceSpec    string                      `protobuf:"bytes,5,opt,name=instance_spec,json=instanceSpec,proto3" json:"instance_spec,omitempty"`
	Comment         string                      `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	ManageBy        string                      `protobuf:"bytes,7,opt,name=manage_by,json=manageBy,proto3" json:"manage_by,omitempty"`
	AppURL          string                      `protobuf:"bytes,8,opt,name=appURL,proto3" json:"appURL,omitempty"`
	AppBaseURL      string                      `protobuf:"bytes,9,opt,name=appBaseURL,proto3" json:"appBaseURL,omitempty"`
	MonitorUrl      string                      `protobuf:"bytes,10,opt,name=monitor_url,json=monitorUrl,proto3" json:"monitor_url,omitempty"`
	AppPath         string                      `protobuf:"bytes,11,opt,name=appPath,proto3" json:"appPath,omitempty"`
	Status          string                      `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	Reason          string                      `protobuf:"bytes,13,opt,name=reason,proto3" json:"reason,omitempty"`
	CreateTime      string                      `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StartedTime     string                      `protobuf:"bytes,15,opt,name=started_time,json=startedTime,proto3" json:"started_time,omitempty"`
	DeleteTime      string                      `protobuf:"bytes,16,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
	TenantId        string                      `protobuf:"bytes,17,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Config          map[string]string           `protobuf:"bytes,18,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UtilizationRate *Resourcequotas             `protobuf:"bytes,19,opt,name=utilization_rate,json=utilizationRate,proto3" json:"utilization_rate,omitempty"`
	CreateUser      string                      `protobuf:"bytes,20,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	Conditions      *ListAppResponse_Conditions `protobuf:"bytes,21,opt,name=conditions,proto3" json:"conditions,omitempty"`
	AccessDeny      string                      `protobuf:"bytes,22,opt,name=access_deny,json=accessDeny,proto3" json:"access_deny,omitempty"`
}

func (x *ListAppResponse_App) Reset() {
	*x = ListAppResponse_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppResponse_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppResponse_App) ProtoMessage() {}

func (x *ListAppResponse_App) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppResponse_App.ProtoReflect.Descriptor instead.
func (*ListAppResponse_App) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{5, 1}
}

func (x *ListAppResponse_App) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListAppResponse_App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListAppResponse_App) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ListAppResponse_App) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ListAppResponse_App) GetInstanceSpec() string {
	if x != nil {
		return x.InstanceSpec
	}
	return ""
}

func (x *ListAppResponse_App) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ListAppResponse_App) GetManageBy() string {
	if x != nil {
		return x.ManageBy
	}
	return ""
}

func (x *ListAppResponse_App) GetAppURL() string {
	if x != nil {
		return x.AppURL
	}
	return ""
}

func (x *ListAppResponse_App) GetAppBaseURL() string {
	if x != nil {
		return x.AppBaseURL
	}
	return ""
}

func (x *ListAppResponse_App) GetMonitorUrl() string {
	if x != nil {
		return x.MonitorUrl
	}
	return ""
}

func (x *ListAppResponse_App) GetAppPath() string {
	if x != nil {
		return x.AppPath
	}
	return ""
}

func (x *ListAppResponse_App) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListAppResponse_App) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ListAppResponse_App) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListAppResponse_App) GetStartedTime() string {
	if x != nil {
		return x.StartedTime
	}
	return ""
}

func (x *ListAppResponse_App) GetDeleteTime() string {
	if x != nil {
		return x.DeleteTime
	}
	return ""
}

func (x *ListAppResponse_App) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListAppResponse_App) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ListAppResponse_App) GetUtilizationRate() *Resourcequotas {
	if x != nil {
		return x.UtilizationRate
	}
	return nil
}

func (x *ListAppResponse_App) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *ListAppResponse_App) GetConditions() *ListAppResponse_Conditions {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *ListAppResponse_App) GetAccessDeny() string {
	if x != nil {
		return x.AccessDeny
	}
	return ""
}

type ListAppResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Rows  []*ListAppResponse_App `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *ListAppResponse_Data) Reset() {
	*x = ListAppResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppResponse_Data) ProtoMessage() {}

func (x *ListAppResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppResponse_Data.ProtoReflect.Descriptor instead.
func (*ListAppResponse_Data) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{5, 2}
}

func (x *ListAppResponse_Data) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListAppResponse_Data) GetRows() []*ListAppResponse_App {
	if x != nil {
		return x.Rows
	}
	return nil
}

type ListConfigResponse_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppType    string `protobuf:"bytes,1,opt,name=app_type,json=appType,proto3" json:"app_type,omitempty"`
	Domain     string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Version    string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Kubeconfig string `protobuf:"bytes,4,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"`
}

func (x *ListConfigResponse_Config) Reset() {
	*x = ListConfigResponse_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigResponse_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigResponse_Config) ProtoMessage() {}

func (x *ListConfigResponse_Config) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigResponse_Config.ProtoReflect.Descriptor instead.
func (*ListConfigResponse_Config) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListConfigResponse_Config) GetAppType() string {
	if x != nil {
		return x.AppType
	}
	return ""
}

func (x *ListConfigResponse_Config) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ListConfigResponse_Config) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ListConfigResponse_Config) GetKubeconfig() string {
	if x != nil {
		return x.Kubeconfig
	}
	return ""
}

type GetAppResponse_Conditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    string   `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	PreStatus string   `protobuf:"bytes,2,opt,name=pre_status,json=preStatus,proto3" json:"pre_status,omitempty"`
	Status    string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Reason    string   `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Events    []string `protobuf:"bytes,5,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetAppResponse_Conditions) Reset() {
	*x = GetAppResponse_Conditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppResponse_Conditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppResponse_Conditions) ProtoMessage() {}

func (x *GetAppResponse_Conditions) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppResponse_Conditions.ProtoReflect.Descriptor instead.
func (*GetAppResponse_Conditions) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetAppResponse_Conditions) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *GetAppResponse_Conditions) GetPreStatus() string {
	if x != nil {
		return x.PreStatus
	}
	return ""
}

func (x *GetAppResponse_Conditions) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetAppResponse_Conditions) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GetAppResponse_Conditions) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetAppResponse_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AppId           string                     `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	InstanceId      string                     `protobuf:"bytes,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceSpec    string                     `protobuf:"bytes,5,opt,name=instance_spec,json=instanceSpec,proto3" json:"instance_spec,omitempty"`
	Comment         string                     `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	ManageBy        string                     `protobuf:"bytes,7,opt,name=manage_by,json=manageBy,proto3" json:"manage_by,omitempty"`
	AppURL          string                     `protobuf:"bytes,8,opt,name=appURL,proto3" json:"appURL,omitempty"`
	AppBaseURL      string                     `protobuf:"bytes,9,opt,name=appBaseURL,proto3" json:"appBaseURL,omitempty"`
	MonitorUrl      string                     `protobuf:"bytes,10,opt,name=monitor_url,json=monitorUrl,proto3" json:"monitor_url,omitempty"`
	AppPath         string                     `protobuf:"bytes,11,opt,name=appPath,proto3" json:"appPath,omitempty"`
	Status          string                     `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	Reason          string                     `protobuf:"bytes,13,opt,name=reason,proto3" json:"reason,omitempty"`
	CreateTime      string                     `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StartedTime     string                     `protobuf:"bytes,15,opt,name=started_time,json=startedTime,proto3" json:"started_time,omitempty"`
	DeleteTime      string                     `protobuf:"bytes,16,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
	TenantId        string                     `protobuf:"bytes,17,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Config          map[string]string          `protobuf:"bytes,18,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UtilizationRate *Resourcequotas            `protobuf:"bytes,19,opt,name=utilization_rate,json=utilizationRate,proto3" json:"utilization_rate,omitempty"`
	CreateUser      string                     `protobuf:"bytes,20,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	Conditions      *GetAppResponse_Conditions `protobuf:"bytes,21,opt,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *GetAppResponse_App) Reset() {
	*x = GetAppResponse_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppResponse_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppResponse_App) ProtoMessage() {}

func (x *GetAppResponse_App) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppResponse_App.ProtoReflect.Descriptor instead.
func (*GetAppResponse_App) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{15, 1}
}

func (x *GetAppResponse_App) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAppResponse_App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAppResponse_App) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetAppResponse_App) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GetAppResponse_App) GetInstanceSpec() string {
	if x != nil {
		return x.InstanceSpec
	}
	return ""
}

func (x *GetAppResponse_App) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GetAppResponse_App) GetManageBy() string {
	if x != nil {
		return x.ManageBy
	}
	return ""
}

func (x *GetAppResponse_App) GetAppURL() string {
	if x != nil {
		return x.AppURL
	}
	return ""
}

func (x *GetAppResponse_App) GetAppBaseURL() string {
	if x != nil {
		return x.AppBaseURL
	}
	return ""
}

func (x *GetAppResponse_App) GetMonitorUrl() string {
	if x != nil {
		return x.MonitorUrl
	}
	return ""
}

func (x *GetAppResponse_App) GetAppPath() string {
	if x != nil {
		return x.AppPath
	}
	return ""
}

func (x *GetAppResponse_App) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetAppResponse_App) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GetAppResponse_App) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *GetAppResponse_App) GetStartedTime() string {
	if x != nil {
		return x.StartedTime
	}
	return ""
}

func (x *GetAppResponse_App) GetDeleteTime() string {
	if x != nil {
		return x.DeleteTime
	}
	return ""
}

func (x *GetAppResponse_App) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetAppResponse_App) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetAppResponse_App) GetUtilizationRate() *Resourcequotas {
	if x != nil {
		return x.UtilizationRate
	}
	return nil
}

func (x *GetAppResponse_App) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *GetAppResponse_App) GetConditions() *GetAppResponse_Conditions {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type UpdateInstanceStatusRequest_Reason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zh string `protobuf:"bytes,1,opt,name=zh,json=zh-CN,proto3" json:"zh,omitempty"`
	En string `protobuf:"bytes,2,opt,name=en,json=en-US,proto3" json:"en,omitempty"`
}

func (x *UpdateInstanceStatusRequest_Reason) Reset() {
	*x = UpdateInstanceStatusRequest_Reason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstanceStatusRequest_Reason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceStatusRequest_Reason) ProtoMessage() {}

func (x *UpdateInstanceStatusRequest_Reason) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceStatusRequest_Reason.ProtoReflect.Descriptor instead.
func (*UpdateInstanceStatusRequest_Reason) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{20, 0}
}

func (x *UpdateInstanceStatusRequest_Reason) GetZh() string {
	if x != nil {
		return x.Zh
	}
	return ""
}

func (x *UpdateInstanceStatusRequest_Reason) GetEn() string {
	if x != nil {
		return x.En
	}
	return ""
}

type VersionResponse_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	GitCommit string `protobuf:"bytes,2,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`
	BuildAt   string `protobuf:"bytes,3,opt,name=build_at,json=buildAt,proto3" json:"build_at,omitempty"`
}

func (x *VersionResponse_Info) Reset() {
	*x = VersionResponse_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse_Info) ProtoMessage() {}

func (x *VersionResponse_Info) ProtoReflect() protoreflect.Message {
	mi := &file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse_Info.ProtoReflect.Descriptor instead.
func (*VersionResponse_Info) Descriptor() ([]byte, []int) {
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP(), []int{27, 0}
}

func (x *VersionResponse_Info) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VersionResponse_Info) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *VersionResponse_Info) GetBuildAt() string {
	if x != nil {
		return x.BuildAt
	}
	return ""
}

var File_datacanvas_gcp_osm_app_v1_app_proto protoreflect.FileDescriptor

var file_datacanvas_gcp_osm_app_v1_app_proto_rawDesc = []byte{
	0x0a, 0x23, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2f, 0x67, 0x63, 0x70,
	0x2f, 0x6f, 0x73, 0x6d, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61,
	0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x1a, 0x21, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2f, 0x67, 0x63, 0x70,
	0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2f,
	0x67, 0x63, 0x70, 0x2f, 0x6f, 0x73, 0x6d, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6b, 0x38, 0x73, 0x2e, 0x69,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6b,
	0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x28, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x19, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xf2, 0x01, 0x0a, 0x1a, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x4e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70,
	0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x5a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x74, 0x22, 0x14, 0x0a,
	0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0xde, 0x03, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0xd3, 0x09, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67,
	0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x8b, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xe0, 0x06, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x55, 0x52, 0x4c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x55, 0x52, 0x4c, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x70, 0x70, 0x42, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x42, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x54, 0x0a, 0x10, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x73, 0x52, 0x0f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x65, 0x6e, 0x79, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6e, 0x79, 0x1a, 0x39,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x60, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76,
	0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x2d, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x48, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x75, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x7f, 0x0a, 0x10,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x51, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x4e, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x22, 0x51, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x54, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x26, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x22, 0xcb, 0x08, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e,
	0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x8b, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0xbd, 0x06, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x62,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x42,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x55, 0x52, 0x4c, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70,
	0x42, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x70, 0x70, 0x42, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e,
	0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x54, 0x0a, 0x10, 0x75, 0x74, 0x69,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73,
	0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x0f,
	0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x54, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61,
	0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x87, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x69, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x69, 0x64, 0x63, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9e,
	0x02, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e,
	0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x69, 0x64, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x69, 0x64, 0x63, 0x49, 0x64, 0x22,
	0x51, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xd6, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x34,
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61,
	0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x1a, 0x2e, 0x0a, 0x06, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x11, 0x0a, 0x02, 0x7a, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x7a, 0x68, 0x2d, 0x43, 0x4e, 0x12, 0x11, 0x0a, 0x02, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x2d, 0x55, 0x53, 0x22, 0x5c, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x23, 0x0a, 0x0f, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x50,
	0x0a, 0x10, 0x50, 0x61, 0x75, 0x73, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x24, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x51, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x10, 0x0a, 0x0e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x0f,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61,
	0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x5a,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x74, 0x22, 0x2a, 0x0a, 0x12, 0x53, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x53, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x29, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x56, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x56, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x32, 0xc3, 0x17, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x93, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12,
	0x2d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70,
	0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e,
	0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25,
	0x8a, 0xb5, 0x18, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x95, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76,
	0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61,
	0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x8a, 0xb5, 0x18, 0x0b, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x10, 0x2f, 0x61, 0x70,
	0x70, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0xc1, 0x01,
	0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x12, 0x29, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61,
	0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5f, 0x92, 0x41, 0x2a, 0x72, 0x28, 0x0a, 0x26, 0x0a, 0x0e, 0x58, 0x2d, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0xe7, 0x94, 0xa8, 0xe6, 0x88,
	0xb7, 0x20, 0x4a, 0x57, 0x54, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x28, 0x01, 0x8a,
	0xb5, 0x18, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21,
	0x5a, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x0c, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0xb8, 0x01, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12,
	0x2b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70,
	0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73,
	0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x92, 0x41, 0x2a, 0x72,
	0x28, 0x0a, 0x26, 0x0a, 0x0e, 0x58, 0x2d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x10, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x20, 0x4a, 0x57, 0x54, 0x20,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x28, 0x01, 0x8a, 0xb5, 0x18, 0x09, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x2a, 0x0e, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xcf, 0x01, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x12, 0x28, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61,
	0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67,
	0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70, 0x92, 0x41,
	0x2a, 0x72, 0x28, 0x0a, 0x26, 0x0a, 0x0e, 0x58, 0x2d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x20, 0x4a, 0x57,
	0x54, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x28, 0x01, 0x8a, 0xb5, 0x18, 0x06, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x5a, 0x1d, 0x12, 0x1b, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x62, 0x79, 0x61, 0x70, 0x70, 0x69,
	0x64, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x70,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x62, 0x79, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0xbb,
	0x01, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x2b, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73,
	0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x92, 0x41, 0x2a, 0x72, 0x28, 0x0a, 0x26,
	0x0a, 0x0e, 0x58, 0x2d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x10, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x20, 0x4a, 0x57, 0x54, 0x20, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x28, 0x01, 0x8a, 0xb5, 0x18, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0xc4, 0x01, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x2b, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61,
	0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x92, 0x41, 0x2a, 0x72, 0x28, 0x0a, 0x26, 0x0a, 0x0e,
	0x58, 0x2d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x20, 0x4a, 0x57, 0x54, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x28, 0x01, 0x8a, 0xb5, 0x18, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x70,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0xca, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x75, 0x73, 0x65, 0x41, 0x70, 0x70,
	0x12, 0x2a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63,
	0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73,
	0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x92, 0x41, 0x2a, 0x72, 0x28,
	0x0a, 0x26, 0x0a, 0x0e, 0x58, 0x2d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x10, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x20, 0x4a, 0x57, 0x54, 0x20, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x28, 0x01, 0x8a, 0xb5, 0x18, 0x08, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x41, 0x70, 0x70, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x5a, 0x15, 0x12, 0x13, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x73,
	0x7d, 0x22, 0x0d, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x75, 0x73, 0x65,
	0x12, 0xd0, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x70, 0x70, 0x12, 0x2b,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e,
	0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d,
	0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x92, 0x41, 0x2a, 0x72, 0x28,
	0x0a, 0x26, 0x0a, 0x0e, 0x58, 0x2d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x10, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x20, 0x4a, 0x57, 0x54, 0x20, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x28, 0x01, 0x8a, 0xb5, 0x18, 0x09, 0x52, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x41, 0x70, 0x70, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x5a, 0x16, 0x12, 0x14, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x2f, 0x7b, 0x69,
	0x64, 0x73, 0x7d, 0x22, 0x0e, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x12, 0xdd, 0x01, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63,
	0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x92, 0x41, 0x2a, 0x72, 0x28, 0x0a, 0x26,
	0x0a, 0x0e, 0x58, 0x2d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x10, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x20, 0x4a, 0x57, 0x54, 0x20, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x28, 0x01, 0x8a, 0xb5, 0x18, 0x12, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0xc0, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x2c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e,
	0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63,
	0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x55, 0x92, 0x41, 0x2a, 0x72, 0x28, 0x0a, 0x26, 0x0a, 0x0e, 0x58, 0x2d, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7,
	0x20, 0x4a, 0x57, 0x54, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x28, 0x01, 0x8a, 0xb5,
	0x18, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xbb, 0x01, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61,
	0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67,
	0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x53, 0x92, 0x41, 0x2a, 0x72, 0x28, 0x0a, 0x26, 0x0a, 0x0e, 0x58, 0x2d, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7,
	0x20, 0x4a, 0x57, 0x54, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x28, 0x01, 0x8a, 0xb5,
	0x18, 0x09, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x3a, 0x01, 0x2a, 0x1a, 0x0e, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0xe1, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76,
	0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76,
	0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70, 0x92, 0x41, 0x2a, 0x72, 0x28, 0x0a, 0x26, 0x0a,
	0x0e, 0x58, 0x2d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x10, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x20, 0x4a, 0x57, 0x54, 0x20, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x28, 0x01, 0x8a, 0xb5, 0x18, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x5a, 0x1b, 0x12, 0x19, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x61,
	0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x7d, 0x2a, 0x0e, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xf5, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x36, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67,
	0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x6c, 0x92, 0x41, 0x2a, 0x72, 0x28, 0x0a, 0x26, 0x0a, 0x0e, 0x58, 0x2d, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0xe7, 0x94, 0xa8,
	0xe6, 0x88, 0xb7, 0x20, 0x4a, 0x57, 0x54, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x28,
	0x01, 0x8a, 0xb5, 0x18, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a,
	0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0xd3, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76,
	0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56,
	0x92, 0x41, 0x2a, 0x72, 0x28, 0x0a, 0x26, 0x0a, 0x0e, 0x58, 0x2d, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x20,
	0x4a, 0x57, 0x54, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x28, 0x01, 0x8a, 0xb5, 0x18,
	0x10, 0x47, 0x65, 0x74, 0x56, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0xd0, 0x03, 0x92, 0x41, 0xba, 0x01, 0x12, 0x89, 0x01,
	0x0a, 0x10, 0x47, 0x43, 0x50, 0x20, 0x4f, 0x53, 0x4d, 0x20, 0x41, 0x50, 0x50, 0x20, 0x41, 0x50,
	0x49, 0x73, 0x22, 0x59, 0x0a, 0x0f, 0x47, 0x43, 0x50, 0x20, 0x4f, 0x53, 0x4d, 0x20, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x36, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x6c, 0x61, 0x79, 0x61, 0x4e, 0x65, 0x57, 0x2f, 0x4f, 0x53,
	0x4d, 0x2f, 0x61, 0x70, 0x70, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x1a, 0x0e, 0x67,
	0x63, 0x70, 0x40, 0x7a, 0x65, 0x74, 0x79, 0x75, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x2a, 0x15, 0x0a,
	0x13, 0x50, 0x72, 0x6f, 0x70, 0x72, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x20, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x22, 0x04, 0x2f, 0x61, 0x70, 0x69, 0x2a,
	0x02, 0x02, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x6f, 0x73, 0x6d, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x5e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63,
	0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x64, 0x63, 0x2f, 0x61,
	0x70, 0x70, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2f, 0x67, 0x63,
	0x70, 0x2f, 0x6f, 0x73, 0x6d, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x70,
	0x76, 0x31, 0xa2, 0x02, 0x04, 0x44, 0x47, 0x4f, 0x41, 0xaa, 0x02, 0x19, 0x44, 0x61, 0x74, 0x61,
	0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x2e, 0x47, 0x63, 0x70, 0x2e, 0x4f, 0x73, 0x6d, 0x2e, 0x41,
	0x70, 0x70, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x19, 0x44, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76,
	0x61, 0x73, 0x5c, 0x47, 0x63, 0x70, 0x5c, 0x4f, 0x73, 0x6d, 0x5c, 0x41, 0x70, 0x70, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x25, 0x44, 0x61, 0x74, 0x61, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x5c, 0x47,
	0x63, 0x70, 0x5c, 0x4f, 0x73, 0x6d, 0x5c, 0x41, 0x70, 0x70, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1d, 0x44, 0x61, 0x74, 0x61,
	0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x3a, 0x3a, 0x47, 0x63, 0x70, 0x3a, 0x3a, 0x4f, 0x73, 0x6d,
	0x3a, 0x3a, 0x41, 0x70, 0x70, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_datacanvas_gcp_osm_app_v1_app_proto_rawDescOnce sync.Once
	file_datacanvas_gcp_osm_app_v1_app_proto_rawDescData = file_datacanvas_gcp_osm_app_v1_app_proto_rawDesc
)

func file_datacanvas_gcp_osm_app_v1_app_proto_rawDescGZIP() []byte {
	file_datacanvas_gcp_osm_app_v1_app_proto_rawDescOnce.Do(func() {
		file_datacanvas_gcp_osm_app_v1_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_datacanvas_gcp_osm_app_v1_app_proto_rawDescData)
	})
	return file_datacanvas_gcp_osm_app_v1_app_proto_rawDescData
}

var file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_datacanvas_gcp_osm_app_v1_app_proto_goTypes = []interface{}{
	(*VersionInformationRequest)(nil),          // 0: datacanvas.gcp.osm.app.v1.VersionInformationRequest
	(*VersionInformationResponse)(nil),         // 1: datacanvas.gcp.osm.app.v1.VersionInformationResponse
	(*CheckHealthRequest)(nil),                 // 2: datacanvas.gcp.osm.app.v1.CheckHealthRequest
	(*CheckHealthResponse)(nil),                // 3: datacanvas.gcp.osm.app.v1.CheckHealthResponse
	(*ListAppRequest)(nil),                     // 4: datacanvas.gcp.osm.app.v1.ListAppRequest
	(*ListAppResponse)(nil),                    // 5: datacanvas.gcp.osm.app.v1.ListAppResponse
	(*ListConfigRequest)(nil),                  // 6: datacanvas.gcp.osm.app.v1.ListConfigRequest
	(*ListConfigResponse)(nil),                 // 7: datacanvas.gcp.osm.app.v1.ListConfigResponse
	(*AddConfigRequest)(nil),                   // 8: datacanvas.gcp.osm.app.v1.AddConfigRequest
	(*AddConfigResponse)(nil),                  // 9: datacanvas.gcp.osm.app.v1.AddConfigResponse
	(*DeleteAppRequest)(nil),                   // 10: datacanvas.gcp.osm.app.v1.DeleteAppRequest
	(*DeleteAppResponse)(nil),                  // 11: datacanvas.gcp.osm.app.v1.DeleteAppResponse
	(*DeleteConfigRequest)(nil),                // 12: datacanvas.gcp.osm.app.v1.DeleteConfigRequest
	(*DeleteConfigResponse)(nil),               // 13: datacanvas.gcp.osm.app.v1.DeleteConfigResponse
	(*GetAppRequest)(nil),                      // 14: datacanvas.gcp.osm.app.v1.GetAppRequest
	(*GetAppResponse)(nil),                     // 15: datacanvas.gcp.osm.app.v1.GetAppResponse
	(*CreateAppRequest)(nil),                   // 16: datacanvas.gcp.osm.app.v1.CreateAppRequest
	(*CreateAppResponse)(nil),                  // 17: datacanvas.gcp.osm.app.v1.CreateAppResponse
	(*UpdateAppRequest)(nil),                   // 18: datacanvas.gcp.osm.app.v1.UpdateAppRequest
	(*UpdateAppResponse)(nil),                  // 19: datacanvas.gcp.osm.app.v1.UpdateAppResponse
	(*UpdateInstanceStatusRequest)(nil),        // 20: datacanvas.gcp.osm.app.v1.UpdateInstanceStatusRequest
	(*UpdateInstanceStatusResponse)(nil),       // 21: datacanvas.gcp.osm.app.v1.UpdateInstanceStatusResponse
	(*PauseAppRequest)(nil),                    // 22: datacanvas.gcp.osm.app.v1.PauseAppRequest
	(*PauseAppResponse)(nil),                   // 23: datacanvas.gcp.osm.app.v1.PauseAppResponse
	(*ResumeAppRequest)(nil),                   // 24: datacanvas.gcp.osm.app.v1.ResumeAppRequest
	(*ResumeAppResponse)(nil),                  // 25: datacanvas.gcp.osm.app.v1.ResumeAppResponse
	(*VersionRequest)(nil),                     // 26: datacanvas.gcp.osm.app.v1.VersionRequest
	(*VersionResponse)(nil),                    // 27: datacanvas.gcp.osm.app.v1.VersionResponse
	(*SetLoglevelRequest)(nil),                 // 28: datacanvas.gcp.osm.app.v1.SetLoglevelRequest
	(*SetLoglevelResponse)(nil),                // 29: datacanvas.gcp.osm.app.v1.SetLoglevelResponse
	(*GetVClusterTokenRequest)(nil),            // 30: datacanvas.gcp.osm.app.v1.GetVClusterTokenRequest
	(*GetVClusterTokenResponse)(nil),           // 31: datacanvas.gcp.osm.app.v1.GetVClusterTokenResponse
	(*VersionInformationResponse_Info)(nil),    // 32: datacanvas.gcp.osm.app.v1.VersionInformationResponse.Info
	(*ListAppResponse_Conditions)(nil),         // 33: datacanvas.gcp.osm.app.v1.ListAppResponse.Conditions
	(*ListAppResponse_App)(nil),                // 34: datacanvas.gcp.osm.app.v1.ListAppResponse.App
	(*ListAppResponse_Data)(nil),               // 35: datacanvas.gcp.osm.app.v1.ListAppResponse.Data
	nil,                                        // 36: datacanvas.gcp.osm.app.v1.ListAppResponse.App.ConfigEntry
	(*ListConfigResponse_Config)(nil),          // 37: datacanvas.gcp.osm.app.v1.ListConfigResponse.Config
	(*GetAppResponse_Conditions)(nil),          // 38: datacanvas.gcp.osm.app.v1.GetAppResponse.Conditions
	(*GetAppResponse_App)(nil),                 // 39: datacanvas.gcp.osm.app.v1.GetAppResponse.App
	nil,                                        // 40: datacanvas.gcp.osm.app.v1.GetAppResponse.App.ConfigEntry
	(*UpdateInstanceStatusRequest_Reason)(nil), // 41: datacanvas.gcp.osm.app.v1.UpdateInstanceStatusRequest.Reason
	(*VersionResponse_Info)(nil),               // 42: datacanvas.gcp.osm.app.v1.VersionResponse.Info
	(*Orderlist)(nil),                          // 43: datacanvas.gcp.osm.app.v1.Orderlist
	(*Resourcequotas)(nil),                     // 44: datacanvas.gcp.osm.app.v1.Resourcequotas
}
var file_datacanvas_gcp_osm_app_v1_app_proto_depIdxs = []int32{
	32, // 0: datacanvas.gcp.osm.app.v1.VersionInformationResponse.data:type_name -> datacanvas.gcp.osm.app.v1.VersionInformationResponse.Info
	35, // 1: datacanvas.gcp.osm.app.v1.ListAppResponse.data:type_name -> datacanvas.gcp.osm.app.v1.ListAppResponse.Data
	37, // 2: datacanvas.gcp.osm.app.v1.ListConfigResponse.data:type_name -> datacanvas.gcp.osm.app.v1.ListConfigResponse.Config
	39, // 3: datacanvas.gcp.osm.app.v1.GetAppResponse.data:type_name -> datacanvas.gcp.osm.app.v1.GetAppResponse.App
	43, // 4: datacanvas.gcp.osm.app.v1.CreateAppRequest.orderlist:type_name -> datacanvas.gcp.osm.app.v1.Orderlist
	43, // 5: datacanvas.gcp.osm.app.v1.UpdateAppRequest.orderlist:type_name -> datacanvas.gcp.osm.app.v1.Orderlist
	41, // 6: datacanvas.gcp.osm.app.v1.UpdateInstanceStatusRequest.reason:type_name -> datacanvas.gcp.osm.app.v1.UpdateInstanceStatusRequest.Reason
	42, // 7: datacanvas.gcp.osm.app.v1.VersionResponse.data:type_name -> datacanvas.gcp.osm.app.v1.VersionResponse.Info
	36, // 8: datacanvas.gcp.osm.app.v1.ListAppResponse.App.config:type_name -> datacanvas.gcp.osm.app.v1.ListAppResponse.App.ConfigEntry
	44, // 9: datacanvas.gcp.osm.app.v1.ListAppResponse.App.utilization_rate:type_name -> datacanvas.gcp.osm.app.v1.Resourcequotas
	33, // 10: datacanvas.gcp.osm.app.v1.ListAppResponse.App.conditions:type_name -> datacanvas.gcp.osm.app.v1.ListAppResponse.Conditions
	34, // 11: datacanvas.gcp.osm.app.v1.ListAppResponse.Data.rows:type_name -> datacanvas.gcp.osm.app.v1.ListAppResponse.App
	40, // 12: datacanvas.gcp.osm.app.v1.GetAppResponse.App.config:type_name -> datacanvas.gcp.osm.app.v1.GetAppResponse.App.ConfigEntry
	44, // 13: datacanvas.gcp.osm.app.v1.GetAppResponse.App.utilization_rate:type_name -> datacanvas.gcp.osm.app.v1.Resourcequotas
	38, // 14: datacanvas.gcp.osm.app.v1.GetAppResponse.App.conditions:type_name -> datacanvas.gcp.osm.app.v1.GetAppResponse.Conditions
	2,  // 15: datacanvas.gcp.osm.app.v1.AppService.CheckHealth:input_type -> datacanvas.gcp.osm.app.v1.CheckHealthRequest
	28, // 16: datacanvas.gcp.osm.app.v1.AppService.SetLogLevel:input_type -> datacanvas.gcp.osm.app.v1.SetLoglevelRequest
	4,  // 17: datacanvas.gcp.osm.app.v1.AppService.ListApp:input_type -> datacanvas.gcp.osm.app.v1.ListAppRequest
	10, // 18: datacanvas.gcp.osm.app.v1.AppService.DeleteApp:input_type -> datacanvas.gcp.osm.app.v1.DeleteAppRequest
	14, // 19: datacanvas.gcp.osm.app.v1.AppService.GetApp:input_type -> datacanvas.gcp.osm.app.v1.GetAppRequest
	16, // 20: datacanvas.gcp.osm.app.v1.AppService.CreateApp:input_type -> datacanvas.gcp.osm.app.v1.CreateAppRequest
	18, // 21: datacanvas.gcp.osm.app.v1.AppService.UpdateApp:input_type -> datacanvas.gcp.osm.app.v1.UpdateAppRequest
	22, // 22: datacanvas.gcp.osm.app.v1.AppService.PauseApp:input_type -> datacanvas.gcp.osm.app.v1.PauseAppRequest
	24, // 23: datacanvas.gcp.osm.app.v1.AppService.ResumeApp:input_type -> datacanvas.gcp.osm.app.v1.ResumeAppRequest
	0,  // 24: datacanvas.gcp.osm.app.v1.AppService.VersionInformation:input_type -> datacanvas.gcp.osm.app.v1.VersionInformationRequest
	6,  // 25: datacanvas.gcp.osm.app.v1.AppService.ListConfig:input_type -> datacanvas.gcp.osm.app.v1.ListConfigRequest
	8,  // 26: datacanvas.gcp.osm.app.v1.AppService.AddConfig:input_type -> datacanvas.gcp.osm.app.v1.AddConfigRequest
	12, // 27: datacanvas.gcp.osm.app.v1.AppService.DeleteConfig:input_type -> datacanvas.gcp.osm.app.v1.DeleteConfigRequest
	20, // 28: datacanvas.gcp.osm.app.v1.AppService.UpdateInstanceStatus:input_type -> datacanvas.gcp.osm.app.v1.UpdateInstanceStatusRequest
	30, // 29: datacanvas.gcp.osm.app.v1.AppService.GetVClusterToken:input_type -> datacanvas.gcp.osm.app.v1.GetVClusterTokenRequest
	3,  // 30: datacanvas.gcp.osm.app.v1.AppService.CheckHealth:output_type -> datacanvas.gcp.osm.app.v1.CheckHealthResponse
	29, // 31: datacanvas.gcp.osm.app.v1.AppService.SetLogLevel:output_type -> datacanvas.gcp.osm.app.v1.SetLoglevelResponse
	5,  // 32: datacanvas.gcp.osm.app.v1.AppService.ListApp:output_type -> datacanvas.gcp.osm.app.v1.ListAppResponse
	11, // 33: datacanvas.gcp.osm.app.v1.AppService.DeleteApp:output_type -> datacanvas.gcp.osm.app.v1.DeleteAppResponse
	15, // 34: datacanvas.gcp.osm.app.v1.AppService.GetApp:output_type -> datacanvas.gcp.osm.app.v1.GetAppResponse
	17, // 35: datacanvas.gcp.osm.app.v1.AppService.CreateApp:output_type -> datacanvas.gcp.osm.app.v1.CreateAppResponse
	19, // 36: datacanvas.gcp.osm.app.v1.AppService.UpdateApp:output_type -> datacanvas.gcp.osm.app.v1.UpdateAppResponse
	23, // 37: datacanvas.gcp.osm.app.v1.AppService.PauseApp:output_type -> datacanvas.gcp.osm.app.v1.PauseAppResponse
	25, // 38: datacanvas.gcp.osm.app.v1.AppService.ResumeApp:output_type -> datacanvas.gcp.osm.app.v1.ResumeAppResponse
	1,  // 39: datacanvas.gcp.osm.app.v1.AppService.VersionInformation:output_type -> datacanvas.gcp.osm.app.v1.VersionInformationResponse
	7,  // 40: datacanvas.gcp.osm.app.v1.AppService.ListConfig:output_type -> datacanvas.gcp.osm.app.v1.ListConfigResponse
	9,  // 41: datacanvas.gcp.osm.app.v1.AppService.AddConfig:output_type -> datacanvas.gcp.osm.app.v1.AddConfigResponse
	13, // 42: datacanvas.gcp.osm.app.v1.AppService.DeleteConfig:output_type -> datacanvas.gcp.osm.app.v1.DeleteConfigResponse
	21, // 43: datacanvas.gcp.osm.app.v1.AppService.UpdateInstanceStatus:output_type -> datacanvas.gcp.osm.app.v1.UpdateInstanceStatusResponse
	31, // 44: datacanvas.gcp.osm.app.v1.AppService.GetVClusterToken:output_type -> datacanvas.gcp.osm.app.v1.GetVClusterTokenResponse
	30, // [30:45] is the sub-list for method output_type
	15, // [15:30] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_datacanvas_gcp_osm_app_v1_app_proto_init() }
func file_datacanvas_gcp_osm_app_v1_app_proto_init() {
	if File_datacanvas_gcp_osm_app_v1_app_proto != nil {
		return
	}
	file_datacanvas_gcp_osm_app_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionInformationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckHealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckHealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstanceStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstanceStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLoglevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLoglevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVClusterTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVClusterTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionInformationResponse_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppResponse_Conditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppResponse_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigResponse_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppResponse_Conditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppResponse_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstanceStatusRequest_Reason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datacanvas_gcp_osm_app_v1_app_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_datacanvas_gcp_osm_app_v1_app_proto_goTypes,
		DependencyIndexes: file_datacanvas_gcp_osm_app_v1_app_proto_depIdxs,
		MessageInfos:      file_datacanvas_gcp_osm_app_v1_app_proto_msgTypes,
	}.Build()
	File_datacanvas_gcp_osm_app_v1_app_proto = out.File
	file_datacanvas_gcp_osm_app_v1_app_proto_rawDesc = nil
	file_datacanvas_gcp_osm_app_v1_app_proto_goTypes = nil
	file_datacanvas_gcp_osm_app_v1_app_proto_depIdxs = nil
}
